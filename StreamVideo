

Next, verify whether a webcam device is successfully detected on your Linux system and VLC.

To do so, first find out the device name of your webcam with the following command. In this example, the device name of the webcam is /dev/video0.

$ ls /dev/video*
/dev/video0
Now use the following command to test video from your webcam. Replace video0 with your own device name.

$ vlc v4l2:///dev/video0
If your webcam is successfully detected by VLC, you should see a video stream of yourself.

Configure Webcam Streaming on VLC
Assuming that your webcam is successfully recognized by VLC, I am going to show how to configure webcam streaming. In this setup, webcam is streamed over HTTP in WMV format.

To configure VLC for webcam streaming, first launch VLC:

$ vlc
Choose Streaming from VLC menu.


On the screen, choose webcam/audio device name (e.g., /dev/video0 for webcam, and hw:0,0 for audio). Click on the checkbox of Show more options. Make a note of value strings in MRL and Edit Options fields. We will use these strings later in the tutorial. Click on Stream button at the bottom.


Verify the video source (e.g., v4l2:///dev/video), and click on Next button to go next.


On this screen, choose the destination (i.e., streaming method/target) of webcam streaming. Since we use HTTP streaming, choose HTTP from the drop down list, and click on Add button.


Next, specify port number and path of a streaming service. For port number, fill in 8080 (assuming that the port number is not occupied), and /stream.wmv as path. For transcoding, choose Video - WMV + WMA (ASF) profile from the drop down list. Click on Next button.


On this screen, you will see stream output string which is automatically generated. Make a note of this string, and click on Stream button at the bottom.


At this point, VLC should start streaming video from your webcam over HTTP. You will not see anything on VLC screen itself since streaming traffic is sent directly to localhost at TCP port number 8080.

To verify that VLC is running correctly at TCP port 8080, run the following command, and look for VLC.

$ sudo netstat -nap | grep 8080
tcp        0      0 0.0.0.0:8080            0.0.0.0:*               LISTEN      11959/vlc       
tcp6       0      0 :::8080                 :::*                    LISTEN      11959/vlc       
Live Stream Webcam from the Command Line
The method described earlier is setting up webcam streaming via VLC GUI. VLC comes with a command-line utility called cvlc which allows you to use VLC without its interface. cvlc is useful when you have to configure VLC streaming on a remote headless host.

To set up webcam streaming from the command line, you need to use three string values that I told you to make note of during the above GUI-based configuration. In this test setup, those string values were:

MRL: v4l2:///dev/video0
Edit options: :v4l2-standard= :input-slave=alsa://hw:0,0 :live-caching=300
Stream output string: :sout="#transcode{vcodec=WMV2,vb=800, scale=1, acodec=wma2, ab=128, channels=2, samplerate=44100}:http{dst=:8080/stream.wmv}"
Concatenate those three strings to contruct arguments for cvlc command. That is, the following command will launch webcam streaming over HTTP in WMV format.

$ cvlc v4l2:///dev/video0 :v4l2-standard= :input-slave=alsa://hw:0,0 :live-caching=300 :sout="#transcode{vcodec=WMV2, vb=800, scale=1, acodec=wma2, ab=128, channels=2, samplerate=44100}:http{dst=:8080/stream.wmv}"
In the above command, specific string values (e.g., audio device name) might be slightly different depending on your hardware configuration. So go through the above GUI-based VLC configuration yourself to find out the correct cvlc arguments for your system.

Watch Streaming Video from Webcam
Once a streaming server starts running, the webcam live feed is available at http://<ip_address_of_webcam_host>:8080/stream.wmv

You can use VLC player or MPlayer to access the webcam feed as follows.

$ vlc http://<ip_address_of_webcam_host>:8080/stream.wmv
$ mplayer http://<ip_address_of_webcam_host>:8080/stream.wmv
If you are testing the feed from the same host, use loopback address 127.0.0.1 instead.

Security Protections for Your Webcam Feed
As mentioned earlier, it is not a good idea to stream your webcam over the Internet without any security protection. Consider some of these measures to protect your webcam feeds.
